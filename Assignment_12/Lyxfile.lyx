#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass literate-article
\use_default_options true
\maintain_unincluded_children false
\language canadian
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics pdftex
\default_output_format default
\output_sync 1
\bibtex_command default
\index_command default
\float_placement H
\paperfontsize default
\spacing single
\use_hyperref false
\papersize a4paper
\use_geometry true
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 1.5cm
\topmargin 1.5cm
\rightmargin 1.5cm
\bottommargin 2cm
\headheight 0.5cm
\headsep 0.5cm
\footskip 0.5cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Python Assignment -6
\end_layout

\begin_layout Author
Swapnil Basak
\end_layout

\begin_layout Date
EE11B122, IIT Madras
\end_layout

\begin_layout Abstract
In this assignment, we will look at how to analyse “Linear Time-invariant
 Systems” with numerical tools in Python.
 
\end_layout

\begin_layout Section
Spring Behaviour
\end_layout

\begin_layout Standard

\lang english
Solve for the time response of a spring satisfying 
\begin_inset Formula $x+\ddot{x=0}$
\end_inset

with 
\begin_inset Formula $x(0)=0.1$
\end_inset

 and 
\begin_inset Formula $x=0$
\end_inset

 for 
\begin_inset Formula $t$
\end_inset

 going from 
\begin_inset Formula $0-20$
\end_inset

 seconds.
 
\end_layout

\begin_layout Subsection
Code 
\end_layout

\begin_layout Scrap

<<code>>=
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Scrap

#! usr/bin/python
\end_layout

\begin_layout Scrap

from scipy import *
\end_layout

\begin_layout Scrap

from scipy import signal
\end_layout

\begin_layout Scrap

from matplotlib.pyplot import *
\end_layout

\begin_layout Scrap

\end_layout

\begin_layout Scrap

# The transfer function of the first spring
\end_layout

\begin_layout Scrap

den=poly1d([1,0,1])
\end_layout

\begin_layout Scrap

num=poly1d([0.1,0])
\end_layout

\begin_layout Scrap

spring=signal.lti(num,den)
\end_layout

\begin_layout Scrap

time=linspace(-20,20,2000)
\end_layout

\begin_layout Scrap

response=spring.impulse(T=time)[1]
\end_layout

\begin_layout Scrap

\end_layout

\begin_layout Scrap

# Plotting the behaviour
\end_layout

\begin_layout Scrap

subplot(221)
\end_layout

\begin_layout Scrap

title("Spring behaviour")
\end_layout

\begin_layout Scrap

ylabel(r'$x-displacement$')
\end_layout

\begin_layout Scrap

plot(time,response,'r+')
\end_layout

\begin_layout Scrap

\begin_inset Newline newline
\end_inset

@
\end_layout

\begin_layout Section
Coupled Spring behaviour
\end_layout

\begin_layout Standard
Solve for a coupled spring problem: 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\ddot{x}+(x-y)=0
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\ddot{y}+2(y-x)=0
\]

\end_inset


\end_layout

\begin_layout Standard
where the initial conditions are 
\begin_inset Formula $x(0)=0,\dot{x}(0)=\dot{y}(0)=y(0)=0$
\end_inset


\end_layout

\begin_layout Subsection

\lang english
Python Code
\end_layout

\begin_layout Scrap

<<runsim>>=
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Scrap

# Transfer function of the Coupled Spring - Spring 1
\end_layout

\begin_layout Scrap

x_num=poly1d([0.5,0,1,])
\end_layout

\begin_layout Scrap

x_den=poly1d([0.5,0,1.5,0]) 
\end_layout

\begin_layout Scrap

spring=signal.lti(x_num,x_den)
\end_layout

\begin_layout Scrap

response = spring.impulse(T=time)[1]
\end_layout

\begin_layout Scrap

\end_layout

\begin_layout Scrap

# Plotting the behaviour 
\end_layout

\begin_layout Scrap

subplot(223)
\end_layout

\begin_layout Scrap

title("Coupled Spring behaviour - X")
\end_layout

\begin_layout Scrap

xlabel(r'$time$')
\end_layout

\begin_layout Scrap

ylabel(r'$x-displacement$')
\end_layout

\begin_layout Scrap

plot(time,response,'r+')
\end_layout

\begin_layout Scrap

\end_layout

\begin_layout Scrap

# Transfer function of the Coupled Spring - Spring 2
\end_layout

\begin_layout Scrap

y_num=poly1d([1,0])
\end_layout

\begin_layout Scrap

y_den=poly1d([0.5,0,1.5,0,0]) 
\end_layout

\begin_layout Scrap

spring=signal.lti(y_num,y_den)
\end_layout

\begin_layout Scrap

response = spring.impulse(T=time)[1]
\end_layout

\begin_layout Scrap

\end_layout

\begin_layout Scrap

# Plotting the behaviour 
\end_layout

\begin_layout Scrap

subplot(224)
\end_layout

\begin_layout Scrap

title("Coupled Spring behaviour - Y")
\end_layout

\begin_layout Scrap

xlabel(r'$time$')
\end_layout

\begin_layout Scrap

ylabel(r'$Y-displacement$')
\end_layout

\begin_layout Scrap

plot(time,response,'r+')
\end_layout

\begin_layout Scrap

\begin_inset Newline newline
\end_inset

@
\end_layout

\begin_layout Section
Curcuit Analysis
\end_layout

\begin_layout Standard
Obtain the magnitude and phase response of the Transfer function of the
 given two-network with 
\begin_inset Formula $L=10^{-3},R_{1}=10,R_{2}=100$
\end_inset

 
\end_layout

\begin_layout Standard
Also, plot the properties of the transfer function.
\end_layout

\begin_layout Subsection

\lang english
Python Code
\end_layout

\begin_layout Scrap

<<fft>>=
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Scrap

# Components of the circuit
\end_layout

\begin_layout Scrap

L=1e-3
\end_layout

\begin_layout Scrap

R1=10
\end_layout

\begin_layout Scrap

R2=100
\end_layout

\begin_layout Scrap

omega=logspace(3,9,61).reshape((61,1))
\end_layout

\begin_layout Scrap

\end_layout

\begin_layout Scrap

# Transfer Function
\end_layout

\begin_layout Scrap

H=1/((R1/R2)+1+(1j*omega*L/R2))
\end_layout

\begin_layout Scrap

\end_layout

\begin_layout Scrap

# Plotting the magnitude of H
\end_layout

\begin_layout Scrap

figure(3)
\end_layout

\begin_layout Scrap

subplot(211)
\end_layout

\begin_layout Scrap

loglog(omega,abs(H),'ro')
\end_layout

\begin_layout Scrap

title("frequency response")
\end_layout

\begin_layout Scrap

xlabel(r'$
\backslash
omega$')
\end_layout

\begin_layout Scrap

ylabel(r'$|H|$')
\end_layout

\begin_layout Scrap

\end_layout

\begin_layout Scrap

# Plotting the phase of H
\end_layout

\begin_layout Scrap

subplot(212)
\end_layout

\begin_layout Scrap

semilogx(omega,180*angle(H)/pi,'ro')
\end_layout

\begin_layout Scrap

xlabel(r"$
\backslash
omega$")
\end_layout

\begin_layout Scrap

ylabel(r"Arg$(H)$")
\end_layout

\begin_layout Scrap

\end_layout

\begin_layout Scrap

# Simlulating Step response
\end_layout

\begin_layout Scrap

den=poly1d([1*L,R1+R2])
\end_layout

\begin_layout Scrap

print "Pole(s) are ", roots(den)
\end_layout

\begin_layout Scrap

sys=signal.lti(R2,den)
\end_layout

\begin_layout Scrap

time=linspace(0,1e-4,1000)
\end_layout

\begin_layout Scrap

step_response = sys.step(T=time)[1]
\end_layout

\begin_layout Scrap

\end_layout

\begin_layout Scrap

# Plotting the Step response
\end_layout

\begin_layout Scrap

figure(5)
\end_layout

\begin_layout Scrap

plot(time, step_response)
\end_layout

\begin_layout Scrap

xlabel(r'$t$')
\end_layout

\begin_layout Scrap

title('Step response')
\end_layout

\begin_layout Scrap

t=linspace(0,50,513)*1e-6;t=t[0:-1]
\end_layout

\begin_layout Scrap

vi=array(cos(1e5*t))
\end_layout

\begin_layout Scrap

\end_layout

\begin_layout Scrap

# Analysing circuit in fft domain
\end_layout

\begin_layout Scrap

Vi=fft(vi)
\end_layout

\begin_layout Scrap

wmax=1/(t[1]-t[0])
\end_layout

\begin_layout Scrap

frq=linspace(-0.5,0.5,513)*wmax
\end_layout

\begin_layout Scrap

frq=frq[0:-1]
\end_layout

\begin_layout Scrap

Vi=hstack([Vi[256:512],Vi[0:256]])
\end_layout

\begin_layout Scrap

omega=2*pi*frq
\end_layout

\begin_layout Scrap

print L, R1, R2
\end_layout

\begin_layout Scrap

den=poly1d([1j*L,R1+R2])
\end_layout

\begin_layout Scrap

H=100.0/den(omega)
\end_layout

\begin_layout Scrap

Vo=array(Vi)*array(H)
\end_layout

\begin_layout Scrap

Vo=hstack([Vo[256:512],Vo[0:256]])
\end_layout

\begin_layout Scrap

vo=ifft(Vo)
\end_layout

\begin_layout Scrap

\end_layout

\begin_layout Scrap

# Plotting the Frequency Response
\end_layout

\begin_layout Scrap

figure(6)
\end_layout

\begin_layout Scrap

subplot(211)
\end_layout

\begin_layout Scrap

plot(frq,abs(Vo),'k')
\end_layout

\begin_layout Scrap

title("Output Frequency Response")
\end_layout

\begin_layout Scrap

xlabel(r"$
\backslash
omega$")
\end_layout

\begin_layout Scrap

ylabel(r"$|Vo|$")
\end_layout

\begin_layout Scrap

subplot(212)
\end_layout

\begin_layout Scrap

plot(frq,angle(Vo)*180/pi,'k')
\end_layout

\begin_layout Scrap

xlabel(r"$
\backslash
omega$")
\end_layout

\begin_layout Scrap

ylabel(r"$arg(Vo)$")
\end_layout

\begin_layout Scrap

\end_layout

\begin_layout Scrap

# Plotting the output and input
\end_layout

\begin_layout Scrap

figure(7)
\end_layout

\begin_layout Scrap

plot(t,vo,'g')
\end_layout

\begin_layout Scrap

plot(t,vi,'b')
\end_layout

\begin_layout Scrap

legend(('Input','Output'))
\end_layout

\begin_layout Scrap

axhline(0, color='black')
\end_layout

\begin_layout Scrap

xlabel("Time")
\end_layout

\begin_layout Scrap

ylabel("Response")
\end_layout

\begin_layout Scrap

title("Input and Outptut Signals")
\end_layout

\begin_layout Scrap

show()
\begin_inset Newline newline
\end_inset

@
\end_layout

\begin_layout Part*

Plots
\end_layout

\begin_layout Standard

\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename spring.png
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout

\begin_inset Caption

\begin_layout Plain Layout

Spring
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard

\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename H.png
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout

\begin_inset Caption

\begin_layout Plain Layout
Transfer Function
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard

\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename step.png
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout

\begin_inset Caption

\begin_layout Plain Layout

Step Response
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard

\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename inout.png
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout

\begin_inset Caption

\begin_layout Plain Layout

Input/Output voltage
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard

\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename fft.png
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout

\begin_inset Caption

\begin_layout Plain Layout

FFT an phase
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\end_body
\end_document
